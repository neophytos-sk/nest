struct sql {
    
    private struct condition_t {
        varchar op
        varchar lhs
        varchar rhs
    }

    private fun mk_condition_t {expr} {
        lassign $expr lhs op rhs

        sql.condition_t "" {
            op $op
            lhs $lhs
            rhs $rhs
        }
    }

    private struct join_t {
        proxy sql lhs
        proxy sql rhs
        proxy sql.mk_condition_t on
    }

    private struct from_t {
        multiple varchar table
        multiple proxy sql subquery
        multiple proxy sql.join_t inner_join
        multiple proxy sql.join_t left_outer_join
        multiple proxy sql.join_t right_outer_join
        multiple proxy sql.join_t natural_join
    }


    optional varchar scope = {}
    optional multiple varchar select = {}
    required from_t from
    multiple proxy sql.mk_condition_t where

}


sql query_posts_1 {
    scope {user}
    multiple select {
        title
        body
        date
        author
    }
    from { table blog_posts }
}

sql query_posts_2 {
    scope {user}
    multiple select {
        title
        body
        date
        author
    }
    from {
        subquery blog_posts {
            multiple select {title body date author category_id}
            from { table blog_posts }
        }
    }
}

sql query_posts_3 {
    scope {user}
    multiple select {
        title
        body
        date
        author
    }
    from {
        inner_join pc {
            lhs p { from { table blog_posts } }
            rhs c { from { table blog_categories } }
            on {p.category_id = c.id}
        }
    }
}

sql query_posts_4 {
    scope {user}
    multiple select {
        title
        body
        date
        author
    }
    from {
        inner_join pc {
            lhs p { from { table blog_posts } }
            rhs c { from { table blog_categories } }
            on {p.category_id = c.id}
        }
        subquery stats { from { table blog_stats } }
    }
    multiple where {{stats.post_id = pc.p.id} {stats.category_id = pc.c.id}}
}

