<nest>
    <struct x-name="email" x-type="struct">
        <typedecl x-name="name" x-type="varchar" x-default_value=""/>
        <typedecl x-name="address" x-type="varchar"/>
        <typeinst x-name="struct.pk" x-type="varchar">address</typeinst>
        <typeinst x-name="name" x-type="struct.slot"/>
        <typeinst x-name="address" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">email</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="name" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">name</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">email</typeinst>
            <typeinst x-name="struct.slot.default_value" x-type="varchar"></typeinst>
        </typeinst>
        <typeinst x-name="address" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">address</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">email</typeinst>
        </typeinst>
    </struct>
    <struct x-name="file" x-type="struct">
        <typedecl x-name="name" x-type="varchar"/>
        <typedecl x-name="mime_type" x-type="varchar"/>
        <typedecl x-name="size" x-type="int32"/>
        <typeinst x-name="name" x-type="struct.slot"/>
        <typeinst x-name="mime_type" x-type="struct.slot"/>
        <typeinst x-name="size" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">file</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="name" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">name</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">file</typeinst>
        </typeinst>
        <typeinst x-name="mime_type" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">mime_type</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">file</typeinst>
        </typeinst>
        <typeinst x-name="size" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">size</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">int32</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">file</typeinst>
        </typeinst>
    </struct>
    <struct x-name="folder" x-type="struct">
        <typedecl x-name="name" x-type="varchar"/>
        <typedecl x-name="num_items" x-type="int32"/>
        <typeinst x-name="name" x-type="struct.slot"/>
        <typeinst x-name="num_items" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">folder</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="name" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">name</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">folder</typeinst>
        </typeinst>
        <typeinst x-name="num_items" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">num_items</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">int32</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">folder</typeinst>
        </typeinst>
    </struct>
    <struct x-name="category" x-type="struct">
        <typedecl x-name="category_name" x-type="varchar"/>
        <typedecl x-name="parent_category" x-type="varchar"/>
        <typeinst x-name="category_name" x-type="struct.slot"/>
        <typeinst x-name="parent_category" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">category</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="category_name" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">category_name</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">category</typeinst>
        </typeinst>
        <typeinst x-name="parent_category" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">parent_category</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">category</typeinst>
        </typeinst>
    </struct>
    <struct x-name="word_count_pair" x-type="struct">
        <typedecl x-name="word" x-type="varchar"/>
        <typedecl x-name="count" x-type="varint"/>
        <typeinst x-name="word" x-type="struct.slot"/>
        <typeinst x-name="count" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">word_count_pair</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="word" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">word</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">word_count_pair</typeinst>
        </typeinst>
        <typeinst x-name="count" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">count</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varint</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">word_count_pair</typeinst>
        </typeinst>
    </struct>
    <struct x-name="message" x-type="struct">
        <typeinst x-name="struct.pk" x-type="varchar">message_id</typeinst>
        <typeinst x-name="struct.is_final_if_no_scope" x-type="bool">yes</typeinst>
        <typedecl x-name="message_id" x-type="varint"/>
        <typedecl x-name="device" x-type="varchar" x-default_value="sms"/>
        <typedecl x-name="num_comments" x-type="int16" x-default_value="0"/>
        <typedecl x-name="subject" x-type="varchar"/>
        <typedecl x-name="body" x-type="varchar"/>
        <email x-name="from" x-type="email">
            <typeinst x-name="struct.type" x-type="varchar">email</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">from</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </email>
        <email x-name="to" x-type="email" x-container="multiple">
            <typeinst x-name="struct.type" x-type="varchar">email</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">to</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </email>
        <email x-name="cc" x-type="email" x-container="multiple" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">email</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">cc</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </email>
        <email x-name="bcc" x-type="email" x-container="multiple" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">email</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">bcc</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </email>
        <typedecl x-name="public_p" x-type="bool" x-default_value="false"/>
        <category x-name="categories" x-type="category" x-container="multiple" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">category</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">categories</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </category>
        <folder x-name="folders" x-type="folder" x-container="multiple" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">folder</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">folders</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </folder>
        <typedecl x-name="tags" x-type="varchar" x-container="multiple" x-default_value=""/>
        <file x-name="attachment" x-type="file" x-container="multiple" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">file</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">attachment</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </file>
        <struct x-name="wordcount_X" x-type="struct" x-container="map" x-default_value="">
            <typedecl x-name="word" x-type="varchar"/>
            <typedecl x-name="count" x-type="int32"/>
            <typeinst x-name="word" x-type="struct.slot"/>
            <typeinst x-name="count" x-type="struct.slot"/>
            <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">wordcount_X</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
            <typeinst x-name="word" x-type="struct.slot">
                <typeinst x-name="struct.slot.name" x-type="varchar">word</typeinst>
                <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
                <typeinst x-name="struct.slot.parent" x-type="varchar">wordcount_X</typeinst>
            </typeinst>
            <typeinst x-name="count" x-type="struct.slot">
                <typeinst x-name="struct.slot.name" x-type="varchar">count</typeinst>
                <typeinst x-name="struct.slot.type" x-type="varchar">int32</typeinst>
                <typeinst x-name="struct.slot.parent" x-type="varchar">wordcount_X</typeinst>
            </typeinst>
        </struct>
        <word_count_pair x-name="wordcount_Y" x-type="word_count_pair" x-container="map">
            <typeinst x-name="struct.type" x-type="varchar">word_count_pair</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">wordcount_Y</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </word_count_pair>
        <word_count_pair x-name="wordcount_Z" x-type="word_count_pair" x-container="map" x-default_value="">
            <typeinst x-name="struct.type" x-type="varchar">word_count_pair</typeinst>
            <typeinst x-name="struct.name" x-type="varchar">wordcount_Z</typeinst>
            <typeinst x-name="struct.nsp" x-type="varchar">::nest::lang</typeinst>
        </word_count_pair>
        <typedecl x-name="words" x-type="varchar" x-container="multiple"/>
        <typeinst x-name="message_id" x-type="struct.slot"/>
        <typeinst x-name="device" x-type="struct.slot"/>
        <typeinst x-name="num_comments" x-type="struct.slot"/>
        <typeinst x-name="subject" x-type="struct.slot"/>
        <typeinst x-name="body" x-type="struct.slot"/>
        <typeinst x-name="public_p" x-type="struct.slot"/>
        <typeinst x-name="tags" x-type="struct.slot"/>
        <typeinst x-name="words" x-type="struct.slot"/>
        <typeinst x-name="struct.type" x-type="varchar">struct</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">message</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
        <typeinst x-name="message_id" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">message_id</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varint</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
        </typeinst>
        <typeinst x-name="device" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">device</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
            <typeinst x-name="struct.slot.default_value" x-type="varchar">sms</typeinst>
        </typeinst>
        <typeinst x-name="num_comments" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">num_comments</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">int16</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
            <typeinst x-name="struct.slot.default_value" x-type="varchar">0</typeinst>
        </typeinst>
        <typeinst x-name="subject" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">subject</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
        </typeinst>
        <typeinst x-name="body" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">body</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
        </typeinst>
        <typeinst x-name="public_p" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">public_p</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">bool</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
            <typeinst x-name="struct.slot.default_value" x-type="varchar">false</typeinst>
        </typeinst>
        <typeinst x-name="tags" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">tags</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
            <typeinst x-name="struct.slot.default_value" x-type="varchar"></typeinst>
            <typeinst x-name="struct.slot.container" x-type="varchar">multiple</typeinst>
        </typeinst>
        <typeinst x-name="words" x-type="struct.slot">
            <typeinst x-name="struct.slot.name" x-type="varchar">words</typeinst>
            <typeinst x-name="struct.slot.type" x-type="varchar">varchar</typeinst>
            <typeinst x-name="struct.slot.parent" x-type="varchar">message</typeinst>
            <typeinst x-name="struct.slot.container" x-type="varchar">multiple</typeinst>
        </typeinst>
    </struct>
    <message x-name="msg4" x-type="message">
        <typeinst x-name="subject" x-type="varchar">hello</typeinst>
        <typeinst x-name="body" x-type="varchar">this is a test</typeinst>
        <typeinst x-name="from" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">zena wow</typeinst>
            <typeinst x-name="email.address" x-type="varchar">zena@example.com</typeinst>
        </typeinst>
        <typeinst x-name="to" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">paris love</typeinst>
            <typeinst x-name="email.address" x-type="varchar">bff@example.com</typeinst>
        </typeinst>
        <typeinst x-name="cc" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">jane awesome</typeinst>
            <typeinst x-name="email.address" x-type="varchar">jane@example.com</typeinst>
        </typeinst>
        <typeinst x-name="cc" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">someone great</typeinst>
            <typeinst x-name="email.address" x-type="varchar">someone@example.com</typeinst>
        </typeinst>
        <typeinst x-name="bcc" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">vera cool</typeinst>
            <typeinst x-name="email.address" x-type="varchar">vera@example.com</typeinst>
        </typeinst>
        <typeinst x-name="bcc" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">greg wise</typeinst>
            <typeinst x-name="email.address" x-type="varchar">greg@example.com</typeinst>
        </typeinst>
        <typeinst x-name="bcc" x-type="email">
            <typeinst x-name="email.name" x-type="varchar">max loyal</typeinst>
            <typeinst x-name="email.address" x-type="varchar">max@example.com</typeinst>
        </typeinst>
        <typeinst x-name="wordcount_Y" x-type="word_count_pair">
            <typeinst x-name="word_count_pair.word" x-type="varchar">the</typeinst>
            <typeinst x-name="word_count_pair.count" x-type="varint">123</typeinst>
        </typeinst>
        <typeinst x-name="wordcount_Y" x-type="word_count_pair">
            <typeinst x-name="word_count_pair.word" x-type="varchar">and</typeinst>
            <typeinst x-name="word_count_pair.count" x-type="varint">54</typeinst>
        </typeinst>
        <typeinst x-name="struct.type" x-type="varchar">message</typeinst>
        <typeinst x-name="struct.name" x-type="varchar">msg4</typeinst>
        <typeinst x-name="struct.nsp" x-type="varchar">::nest::data</typeinst>
    </message>
</nest>

